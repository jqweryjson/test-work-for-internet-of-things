{"version":3,"sources":["components/Form/index.tsx","components/Home/index.tsx","components/Dashboard/index.tsx","components/Nav/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Form","React","memo","schema","useState","givenFormData","formData","setFormData","submitOnEnter","activityIndicatorEnabled","uiSchema","onChange","console","log","onSubmit","alert","Home","Container","Dashboard","JSON","stringify","DSL","Nav","role","Breadcrumbs","aria-label","Link","underline","color","href","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2nGAgBaA,EAAkBC,IAAMC,MAAK,YAAiB,IAAdC,EAAM,EAANA,OAAM,EACjBF,IAAMG,SAASC,GAAc,mBAAtDC,EAAQ,KAAEC,EAAW,KAE5B,OACE,cAAC,IAAsB,CACrBC,eAAa,EACbC,0BAAwB,EACxBN,OAAQA,EACRO,SAAUA,EACVJ,SAAUA,EACVK,SAAU,YAAwB,IAArBL,EAAQ,EAARA,SACXM,QAAQC,IAAIP,GACZC,EAAYD,IAGdQ,SAAU,kBAAMC,MAAM,wB,SCzBtBC,EAAiB,WAAH,OAClB,cAACC,EAAA,EAAS,UACR,cAACjB,EAAI,CAACG,OAAQA,O,SCDLe,EAAuBjB,IAAMC,MAAK,WAC7C,OAAO,8BAAMiB,KAAKC,UAAUC,EAAK,KAAM,Q,kBCJ5BC,EAAM,WACjB,OACE,qBAAKC,KAAK,eAAc,SACtB,eAACC,EAAA,EAAW,CAACC,aAAW,aAAY,UAClC,cAACC,EAAA,EAAI,CAACC,UAAU,QAAQC,MAAM,UAAUC,KAAK,IAAG,kBAGhD,cAACH,EAAA,EAAI,CAACC,UAAU,QAAQC,MAAM,UAAUC,KAAK,aAAY,6BCH3DC,EAAU,WACd,OACE,qCACE,cAAC,EAAG,IACJ,eAAC,IAAM,WACL,cAAC,IAAK,CAACC,OAAK,EAACC,KAAK,IAAG,SACnB,cAAC,EAAI,MAEP,cAAC,IAAK,CAACA,KAAK,aAAY,SACtB,cAACd,EAAS,aCLLe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,IAAa,UACZ,cAAC,EAAG,QAGRC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.325091df.chunk.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-shadow */\nimport type { FC } from 'react'\n\nimport React from 'react'\nimport MaterialJsonSchemaForm from 'react-jsonschema-form-material-ui'\n\nimport uiSchema from '../../uiSchema.json'\nimport givenFormData from '../../givenFormData.json'\n\nimport { MySchema } from '../../types'\n\ninterface Props {\n  schema: MySchema\n}\n\nexport const Form: FC<Props> = React.memo(({ schema }) => {\n  const [formData, setFormData] = React.useState(givenFormData)\n\n  return (\n    <MaterialJsonSchemaForm\n      submitOnEnter\n      activityIndicatorEnabled\n      schema={schema}\n      uiSchema={uiSchema}\n      formData={formData}\n      onChange={({ formData }: any) => {\n        console.log(formData)\n        setFormData(formData)\n      }}\n      // eslint-disable-next-line no-alert\n      onSubmit={() => alert('form submitted')}\n    />\n  )\n})\n","import { Container } from '@mui/material'\nimport * as React from 'react'\nimport { Form } from '../Form'\n\nimport schema from '../../schema.json'\n\nconst Home: React.FC = () => (\n  <Container>\n    <Form schema={schema} />\n  </Container>\n)\n\nexport { Home }\n","import type { FC } from 'react'\n\nimport React from 'react'\nimport DSL from '../../DSL.json'\n\ninterface Props {}\n\nexport const Dashboard: FC<Props> = React.memo(() => {\n  return <pre>{JSON.stringify(DSL, null, 2)}</pre>\n})\n","import * as React from 'react'\nimport Breadcrumbs from '@mui/material/Breadcrumbs'\nimport Link from '@mui/material/Link'\n\nexport const Nav = () => {\n  return (\n    <div role=\"presentation\">\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <Link underline=\"hover\" color=\"inherit\" href=\"/\">\n          Form\n        </Link>\n        <Link underline=\"hover\" color=\"inherit\" href=\"/dashboard\">\n          Dashboard\n        </Link>\n      </Breadcrumbs>\n    </div>\n  )\n}\n","import type { FC } from 'react'\n\nimport * as React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { Home } from './components/Home'\nimport { Dashboard } from './components/Dashboard'\nimport { Nav } from './components/Nav'\n\nconst App: FC = () => {\n  return (\n    <>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n      </Switch>\n    </>\n  )\n}\n\nexport { App }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}